{"name": "Подсказка в поле поиска", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: not connected to DevTools\n  (Session info: chrome=138.0.7204.169)\nStacktrace:\n\tGetHandleVerifier [0x0xa61af3+62339]\n\tGetHandleVerifier [0x0xa61b34+62404]\n\t(No symbol) [0x0x8a2123]\n\t(No symbol) [0x0x891b30]\n\t(No symbol) [0x0x8af8f2]\n\t(No symbol) [0x0x915cbc]\n\t(No symbol) [0x0x930089]\n\t(No symbol) [0x0x90f1b6]\n\t(No symbol) [0x0x8de7a2]\n\t(No symbol) [0x0x8df644]\n\tGetHandleVerifier [0x0xcd6683+2637587]\n\tGetHandleVerifier [0x0xcd1a8a+2618138]\n\tGetHandleVerifier [0x0xa8856a+220666]\n\tGetHandleVerifier [0x0xa78998+156200]\n\tGetHandleVerifier [0x0xa7f12d+182717]\n\tGetHandleVerifier [0x0xa69a38+94920]\n\tGetHandleVerifier [0x0xa69bc2+95314]\n\tGetHandleVerifier [0x0xa54d0a+9626]\n\tBaseThreadInitThunk [0x0x76625d49+25]\n\tRtlInitializeExceptionChain [0x0x7790d2fb+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7790d281+561]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bdf1e43de2aeb3346a8dc7d4725c5aa3\")>\n\n    @allure.title(\"Подсказка в поле поиска\")\n    @pytest.mark.ui\n    def test_search_field_placeholder(driver):\n        with allure.step(\"Открытие главной страницы\"):\n            driver.get(\"https://www.kinopoisk.ru\")\n    \n        with allure.step(\"Ожидание появления поля поиска\"):\n>           search_input = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located(\n                    (By.CSS_SELECTOR, \"input[aria-label*='Фильмы']\")\n                )\n            )\n\ntests\\test_ui.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:104: in _predicate\n    return driver.find_element(*locator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F21CF6C7D0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"invalid session id: session deleted as the...]\\\\n\\\\tRtlInitializeExceptionChain [0x0x7790d2fb+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x7790d281+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nE       from disconnected: not connected to DevTools\nE         (Session info: chrome=138.0.7204.169)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0xa61af3+62339]\nE       \tGetHandleVerifier [0x0xa61b34+62404]\nE       \t(No symbol) [0x0x8a2123]\nE       \t(No symbol) [0x0x891b30]\nE       \t(No symbol) [0x0x8af8f2]\nE       \t(No symbol) [0x0x915cbc]\nE       \t(No symbol) [0x0x930089]\nE       \t(No symbol) [0x0x90f1b6]\nE       \t(No symbol) [0x0x8de7a2]\nE       \t(No symbol) [0x0x8df644]\nE       \tGetHandleVerifier [0x0xcd6683+2637587]\nE       \tGetHandleVerifier [0x0xcd1a8a+2618138]\nE       \tGetHandleVerifier [0x0xa8856a+220666]\nE       \tGetHandleVerifier [0x0xa78998+156200]\nE       \tGetHandleVerifier [0x0xa7f12d+182717]\nE       \tGetHandleVerifier [0x0xa69a38+94920]\nE       \tGetHandleVerifier [0x0xa69bc2+95314]\nE       \tGetHandleVerifier [0x0xa54d0a+9626]\nE       \tBaseThreadInitThunk [0x0x76625d49+25]\nE       \tRtlInitializeExceptionChain [0x0x7790d2fb+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7790d281+561]\n\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: InvalidSessionIdException"}, "steps": [{"name": "Открытие главной страницы", "status": "passed", "start": 1753731447301, "stop": 1753731448674}, {"name": "Ожидание появления поля поиска", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: not connected to DevTools\n  (Session info: chrome=138.0.7204.169)\nStacktrace:\n\tGetHandleVerifier [0x0xa61af3+62339]\n\tGetHandleVerifier [0x0xa61b34+62404]\n\t(No symbol) [0x0x8a2123]\n\t(No symbol) [0x0x891b30]\n\t(No symbol) [0x0x8af8f2]\n\t(No symbol) [0x0x915cbc]\n\t(No symbol) [0x0x930089]\n\t(No symbol) [0x0x90f1b6]\n\t(No symbol) [0x0x8de7a2]\n\t(No symbol) [0x0x8df644]\n\tGetHandleVerifier [0x0xcd6683+2637587]\n\tGetHandleVerifier [0x0xcd1a8a+2618138]\n\tGetHandleVerifier [0x0xa8856a+220666]\n\tGetHandleVerifier [0x0xa78998+156200]\n\tGetHandleVerifier [0x0xa7f12d+182717]\n\tGetHandleVerifier [0x0xa69a38+94920]\n\tGetHandleVerifier [0x0xa69bc2+95314]\n\tGetHandleVerifier [0x0xa54d0a+9626]\n\tBaseThreadInitThunk [0x0x76625d49+25]\n\tRtlInitializeExceptionChain [0x0x7790d2fb+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7790d281+561]\n\n", "trace": "  File \"C:\\Users\\chere\\Desktop\\final-project\\tests\\test_ui.py\", line 83, in test_search_field_placeholder\n    search_input = WebDriverWait(driver, 10).until(\n        EC.presence_of_element_located(\n            (By.CSS_SELECTOR, \"input[aria-label*='Фильмы']\")\n        )\n    )\n  File \"C:\\Users\\chere\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 129, in until\n    value = method(self._driver)\n  File \"C:\\Users\\chere\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 104, in _predicate\n    return driver.find_element(*locator)\n           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\chere\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 914, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\chere\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 447, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\chere\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1753731448674, "stop": 1753731454816}], "start": 1753731447301, "stop": 1753731454838, "uuid": "5441e04c-8aef-4b41-8291-68251c85b5d3", "historyId": "0f86851b31cd970a739bb11eab554868", "testCaseId": "0f86851b31cd970a739bb11eab554868", "fullName": "tests.test_ui#test_search_field_placeholder", "labels": [{"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "host", "value": "Popboom"}, {"name": "thread", "value": "27352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}], "titlePath": ["tests", "test_ui.py"]}